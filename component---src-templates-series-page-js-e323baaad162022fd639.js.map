{"version":3,"sources":["webpack:///./src/templates/series/page.js"],"names":["data","pageContext","series","posts","pick","map","x","node","header","list","slice","title","name","className","query","matches","fluid","description","post","key","id"],"mappings":"qOAYe,sBAA4B,IAAzBA,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACdC,EAAWF,EAAXE,OACFC,EAAQC,YAAKJ,EAAM,eAAeK,KAAI,SAAAC,GAAC,OAAIA,EAAEC,SAAS,GACtDC,EAASL,EAAM,GACfM,EAAON,EAAMO,MAAM,GAEzB,OACE,kBAAC,IAAD,CAAQC,MAAOT,EAAOU,KAAMC,UAAU,eACpC,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,sBACb,kBAAC,IAAD,CAAOC,MAAM,uBACV,SAAAC,GAAO,OACNA,GACE,yBAAKF,UAAU,wBACb,kBAAC,IAAD,CACEA,UAAU,oBACVG,MAAOZ,YAAKF,EAAQ,iCAEtB,yBAAKW,UAAU,sBAAsBX,EAAOU,MAC5C,yBAAKC,UAAU,qBAAqBX,EAAOe,iBAKnD,yBAAKJ,UAAU,4BACZV,EAAM,IAAM,kBAAC,IAAD,CAASe,KAAMV,KAE9B,yBAAKK,UAAU,0BACZJ,EAAKJ,KAAI,SAAAa,GAAI,OACZ,kBAAC,IAAD,CAAWC,IAAKD,EAAKE,GAAIF,KAAMA,QAGnC,kBAAC,IAAejB,IAElB,kBAAC,IAAD,CAAOa,MAAM,uBACV,SAAAC,GAAO,OACLA,GACC,yBAAKF,UAAU,wBACb,kBAAC,IAAD,CACEA,UAAU,oBACVG,MAAOZ,YAAKF,EAAQ,iCAEtB,yBAAKW,UAAU,sBAAsBX,EAAOU,MAC5C,yBAAKC,UAAU,qBAAqBX,EAAOe,oBAUpD,IAAMH,EAAK","file":"component---src-templates-series-page-js-e323baaad162022fd639.js","sourcesContent":["import React from 'react';\nimport Media from 'react-media';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport pick from 'utils/pick';\n\nimport Layout from 'components/Layout';\nimport Pagination from 'components/Pagination';\nimport { PostBig, PostSmall } from 'components/Post';\n\nimport './style.less';\n\nexport default ({ data, pageContext }) => {\n  const { series } = data;\n  const posts = pick(data, 'posts.edges').map(x => x.node) || [];\n  const header = posts[0];\n  const list = posts.slice(1);\n\n  return (\n    <Layout title={series.name} className=\"series-page\">\n      <div className=\"series-page__content\">\n        <div className=\"series-page__posts\">\n          <Media query=\"(max-width: 768px)\">\n            {matches =>\n              matches && (\n                <div className=\"series-page__section\">\n                  <Img\n                    className=\"series-page__logo\"\n                    fluid={pick(series, 'cover.childImageSharp.fluid')}\n                  />\n                  <div className=\"series-page__title\">{series.name}</div>\n                  <div className=\"series-page__desc\">{series.description}</div>\n                </div>\n              )\n            }\n          </Media>\n          <div className=\"series-page__header-post\">\n            {posts[0] && <PostBig post={header} />}\n          </div>\n          <div className=\"series-page__post-list\">\n            {list.map(post => (\n              <PostSmall key={post.id} post={post} />\n            ))}\n          </div>\n          <Pagination {...pageContext} />\n        </div>\n        <Media query=\"(max-width: 768px)\">\n          {matches =>\n            !matches && (\n              <div className=\"series-page__section\">\n                <Img\n                  className=\"series-page__logo\"\n                  fluid={pick(series, 'cover.childImageSharp.fluid')}\n                />\n                <div className=\"series-page__title\">{series.name}</div>\n                <div className=\"series-page__desc\">{series.description}</div>\n              </div>\n            )\n          }\n        </Media>\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query SeriesPageQuery($posts: [String], $series: String) {\n    posts: allMarkdownRemark(\n      filter: { id: { in: $posts } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          ...PostBig\n        }\n      }\n    }\n    series: seriesJson(id: { eq: $series }) {\n      id\n      name\n      description\n      cover {\n        ... on File {\n          childImageSharp {\n            fluid(cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}